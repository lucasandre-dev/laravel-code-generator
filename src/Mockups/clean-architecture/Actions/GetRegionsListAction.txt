<?php

namespace Src\domain\%PascalCase%\Actions;

use Src\domain\_Shared\Pagination\Pagination;
use Src\domain\%PascalCase%\Contracts\%PascalCase%RepositoryInterface;
use Src\domain\%PascalCase%\DTO\GetAll%PascalCase%sInputDto;
use Src\domain\%PascalCase%\Mappers\%PascalCase%Mapper;

class Get%PascalCase%sListAction
{
    private %PascalCase%RepositoryInterface $%camelCase%Repository;

    /**
     * @param %PascalCase%RepositoryInterface $%camelCase%Repository
     */
    public function __construct(%PascalCase%RepositoryInterface $%camelCase%Repository)
    {
        $this->%camelCase%Repository = $%camelCase%Repository;
    }

    /**
     * @param GetAll%PascalCase%sInputDto $inputDto
     * @return Pagination
     */
    public function execute(GetAll%PascalCase%sInputDto $inputDto): Pagination
    {
        $%camelCase%s = $this->%camelCase%Repository->getList();

        $%camelCase%s->mapItems(function ($%camelCase%) {
            return %PascalCase%Mapper::entityToOutputDto($%camelCase%);
        });

        return $%camelCase%s;
    }
}
