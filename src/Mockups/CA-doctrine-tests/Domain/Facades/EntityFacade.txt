<?php

namespace Src\domain\%PascalCase%\Facades;

use Src\domain\_Shared\Pagination\Pagination;
use Src\domain\_Shared\Transactions\Transaction;
use Src\domain\%PascalCase%\Actions\Create%PascalCase%Action;
use Src\domain\%PascalCase%\Actions\Delete%PascalCase%Action;
use Src\domain\%PascalCase%\Actions\GetAll%PascalCase%sAction;
use Src\domain\%PascalCase%\Actions\Get%PascalCase%ByIdAction;
use Src\domain\%PascalCase%\Actions\Get%PascalCase%sListAction;
use Src\domain\%PascalCase%\Actions\Update%PascalCase%Action;
use Src\domain\%PascalCase%\DTO\Create%PascalCase%InputDto;
use Src\domain\%PascalCase%\DTO\Delete%PascalCase%InputDto;
use Src\domain\%PascalCase%\DTO\GetAll%PascalCase%sInputDto;
use Src\domain\%PascalCase%\DTO\Get%PascalCase%ByIdInputDto;
use Src\domain\%PascalCase%\DTO\%PascalCase%OutputDto;
use Src\domain\%PascalCase%\DTO\Update%PascalCase%InputDto;
use Src\domain\%PascalCase%\Repositories\%PascalCase%Repository;

class %PascalCase%Facade
{
    public static function all(GetAll%PascalCase%sInputDto $inputDto): array
    {
        $action = new GetAll%PascalCase%sAction(new %PascalCase%Repository());
        return $action->execute($inputDto);
    }

    public static function find(Get%PascalCase%ByIdInputDto $inputDto): ?%PascalCase%OutputDto
    {
        $action = new Get%PascalCase%ByIdAction(new %PascalCase%Repository());
        return $action->execute($inputDto);
    }

    public static function create(Create%PascalCase%InputDto $inputDto): %PascalCase%OutputDto
    {
        $action = new Create%PascalCase%Action(new %PascalCase%Repository(), new Transaction());
        return $action->execute($inputDto);
    }

    public static function update(Update%PascalCase%InputDto $inputDto): %PascalCase%OutputDto
    {
        $action = new Update%PascalCase%Action(new %PascalCase%Repository(), new Transaction());
        return $action->execute($inputDto);
    }

    public static function delete(Delete%PascalCase%InputDto $inputDto): void
    {
        $action = new Delete%PascalCase%Action(new %PascalCase%Repository(), new Transaction());
        $action->execute($inputDto);
    }
}
